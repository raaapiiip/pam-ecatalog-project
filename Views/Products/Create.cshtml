@model ItemListApp.Models.Products

@{
    ViewBag.Title = "Create Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main-content position-relative border-radius-lg max-height-vh-100 h-100">
    <!-- NAVBAR START -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 shadow-none border-radius-xl " id="navbarBlur" data-scroll="false">
        <div class="container-fluid py-1 px-3">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
                    <li class="breadcrumb-item text-sm text-white"><a class="opacity-5 text-white">Pages</a></li>
                    <li class="breadcrumb-item text-sm text-white"><a class="text-white">Products</a></li>
                    <li class="breadcrumb-item text-sm text-white active" aria-current="page">Create</li>
                </ol>
                <h6 class="font-weight-bolder text-white mb-0">Products</h6>
            </nav>
            <div class="collapse navbar-collapse me-md-0" id="navbar">
                <div class="ms-auto d-flex align-items-center">
                    <span class="d-inline text-white">Hello, @User.Identity.Name</span>
                </div>
                <div class="nav-item d-xl-none ps-3 d-flex align-items-center">
                    <a href="javascript:;" class="nav-link text-white p-0" id="iconNavbarSidenav">
                        <div class="sidenav-toggler-inner">
                            <i class="sidenav-toggler-line bg-white"></i>
                            <i class="sidenav-toggler-line bg-white"></i>
                            <i class="sidenav-toggler-line bg-white"></i>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </nav>
    <!-- NAVBAR END -->
    <!-- CONTENT START -->
    <div class="container-fluid py-5">
        <!-- CREATE FORM START -->
        <div class="row">
            <div class="col-12">
                <div class="card mb-4 border-radius-lg">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-start">
                        <h5 class="justify-content-start">Create Product</h5>
                        <a href="@Url.Action("Index")" class="btn btn-secondary">Close</a>
                    </div>
                    <div class="card-body px-4 pt-4 pb-4">
                        @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "editProductForm" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Photo</label></span>
                                <input type="file" name="photoFile" id="photoFile" class="form-control" style="width: 70%" accept="image/*" />
                                <small class="form-text text-muted">Supported formats: JPG, JPEG, PNG, GIF.</small>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Category</label></span>
                                <span class="text-danger text-sm">● required</span>
                                <select class="form-select" id="categoryDropdown" name="Product_Category_id" required="required" style="width: 70%" value="@Model.Product_Category_id">
                                    @foreach (var category in ViewData["Product_Category_id"] as List<SelectListItem>)
                                    {
                                        <option value="@category.Value" @(category.Selected ? "selected" : "")>@category.Text</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Code Number</label></span>
                                <span class="text-danger text-sm">● required</span>
                                @Html.TextBoxFor(model => model.Product_code_number, new { @class = "form-control", required = "required", style = "width: 70%", placeholder = "Example: ID 00123" })
                                <span id="code-number-error" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Accessories Name</label></span>
                                <span class="text-danger text-sm">● required</span>
                                @Html.TextBoxFor(model => model.Product_accessories_name, new { @class = "form-control", required = "required", style = "width: 70%", placeholder = "Example: Dust Bin" })
                                <span id="accessories-name-error" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Quantity</label></span>
                                @Html.TextBoxFor(model => model.Product_qty, new { @class = "form-control", type = "number", min = "0", style = "width: 70%", placeholder = "Example: 10" })
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Owner</label></span>
                                <span class="text-danger text-sm">● required</span>
                                <div class="dropdown-container">
                                    @Html.DropDownList("Product_owner", new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "-- Select Owner --", Value = "", Selected = true },
                                        new SelectListItem { Text = "BAT1", Value = "BAT1" },
                                        new SelectListItem { Text = "BAT2", Value = "BAT2" },
                                        new SelectListItem { Text = "BAT3", Value = "BAT3" },
                                        new SelectListItem { Text = "BAT1-BAT2", Value = "BAT1-BAT2" },
                                        new SelectListItem { Text = "BAT1-BAT3", Value = "BAT1-BAT3" },
                                        new SelectListItem { Text = "BAT2-BAT3", Value = "BAT2-BAT3" },
                                        new SelectListItem { Text = "BAT1-BAT2-BAT3", Value = "BAT1-BAT2-BAT3" }
                                    }, new { @class = "form-select", required = "required", style = "width: 70%" })
                                </div>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Department</label></span>
                                <span class="text-danger text-sm">● required</span>
                                <div class="dropdown-container">
                                    @Html.DropDownList("Product_dept", new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "-- Select Department --", Value = "", Selected = true },
                                        new SelectListItem { Text = "PAM", Value = "PAM" },
                                    }, new { @class = "form-select", required = "required", style = "width: 70%" })
                                </div>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Drawing</label></span>
                                <input type="file" name="drawingFile" id="drawingFile" class="form-control" style="width: 70%" accept=".pdf,.doc,.docx,.xls,.xlsx" />
                                <small class="form-text text-muted">Supported formats: PDF, DOC, DOCX, XLS, XLSX.</small>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>ECCN</label></span>
                                @Html.TextBoxFor(model => model.Product_eccn, new { @class = "form-control", style = "width: 70%", placeholder = "Example: H1234" })
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>HS Code</label></span>
                                @Html.TextBoxFor(model => model.Product_hs_code, new { @class = "form-control", style = "width: 70%", placeholder = "Example: 39234000" })
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Vendor Name</label></span>
                                <select class="form-select" id="categoryDropdown" name="Product_Vendor_id" style="width: 70%" value="@Model.Product_Vendor_id">
                                    @foreach (var vendor in ViewData["Product_Vendor_id"] as List<SelectListItem>)
                                    {
                                        <option value="@vendor.Value" @(vendor.Selected ? "selected" : "")>@vendor.Text</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Quotation</label></span>
                                <input type="file" name="quotationFile" id="quotationFile" class="form-control" style="width: 70%" accept=".pdf,.doc,.docx,.xls,.xlsx" />
                                <small class="form-text text-muted">Supported formats: PDF, DOC, DOCX, XLS, XLSX.</small>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Last Modification</label></span>
                                <input type="text" class="form-control" style="width: 70%" value="@DateTime.Now.ToString("dd/MM/yyyy")" readonly />
                                <small class="form-text text-muted">Auto-filled with current date.</small>
                                <input type="hidden" id="Product_last_modification" name="Product_last_modification" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Function</label></span>
                                @Html.TextAreaFor(model => model.Product_function, new { @class = "form-control", rows = "3", style = "width: 70%", placeholder = "Example: FOL, EOL, TEST-BEX1, MSP-BEX2" })
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Remark</label></span>
                                @Html.TextAreaFor(model => model.Product_remark, new { @class = "form-control", rows = "3", style = "width: 70%", placeholder = "Example: Small Bin IC reject" })
                            </div>

                            <div class="row justify-content-start">
                                <div class="col-auto">
                                    <input type="submit" id="submitBtn" value="Save" class="btn btn-success btn-lg mt-3" />
                                </div>
                                <div class="col-auto">
                                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg mt-3">Cancel</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- CREATE FORM END -->
        <!-- FOOTER START -->
        <footer class="footer pt-3">
            <div class="container-fluid">
                <div class="row align-items-center justify-content-lg-between">
                    <div class="col-lg-6 mb-lg-0 mb-4">
                        <div class="copyright text-center text-md text-muted text-lg-start">
                            ©
                            <script>document.write(new Date().getFullYear())</script> -
                            <a class="font-weight-bold">OE Applications</a>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- FOOTER END -->
    </div>
    <!-- CONTENT END -->
</main>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        function validateFile(input, allowedExtensions) {
            if (input.files.length > 0) {
                let fileName = input.files[0].name.toLowerCase();
                let isValid = allowedExtensions.some(ext => fileName.endsWith(ext));
                if (!isValid) {
                    alert("Invalid file type. Allowed formats: " + allowedExtensions.join(", "));
                    input.value = "";
                }
            }
        }

        document.getElementById("photoFile").addEventListener("change", function () {
            validateFile(this, [".jpg", ".jpeg", ".png", ".gif"]);
        });

        document.getElementById("drawingFile").addEventListener("change", function () {
            validateFile(this, [".pdf", ".doc", ".docx", ".xls", ".xlsx"]);
        });

        document.getElementById("quotationFile").addEventListener("change", function () {
            validateFile(this, [".pdf", ".doc", ".docx", ".xls", ".xlsx"]);
        });
    });

    $(document).ready(function () {
        let isAccessoriesNameValid = true;
        let isCodeNumberValid = true;

        function checkUnique(field, value, errorLabel, flagVar) {
            $.ajax({
                url: '@Url.Action("CheckUnique", "Products")',
                type: 'GET',
                data: { field: field, value: value },
                success: function (response) {
                    if (!response.isValid) {
                        $(errorLabel).text(response.message);
                        if (flagVar === "isAccessoriesNameValid") {
                            isAccessoriesNameValid = false;
                        } else if (flagVar === "isCodeNumberValid") {
                            isCodeNumberValid = false;
                        }
                    } else {
                        $(errorLabel).text("");
                        if (flagVar === "isAccessoriesNameValid") {
                            isAccessoriesNameValid = true;
                        } else if (flagVar === "isCodeNumberValid") {
                            isCodeNumberValid = true;
                        }
                    }
                    toggleSubmitButton();
                }
            });
        }

        function toggleSubmitButton() {
            if (isAccessoriesNameValid && isCodeNumberValid) {
                $("#submitBtn").prop("disabled", false);
            } else {
                $("#submitBtn").prop("disabled", true);
            }
        }

        $("#Product_accessories_name").on("input", function () {
            checkUnique("Product_accessories_name", $(this).val(), "#accessories-name-error", "isAccessoriesNameValid");
        });

        $("#Product_code_number").on("input", function () {
            checkUnique("Product_code_number", $(this).val(), "#code-number-error", "isCodeNumberValid");
        });

        $("#editProductForm").on("submit", function (e) {
            if (!isAccessoriesNameValid || !isCodeNumberValid) {
                e.preventDefault();
            }
        });

        toggleSubmitButton();
    });
</script>