@model ItemListApp.Models.Users

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main-content position-relative border-radius-lg max-height-vh-100 h-100">
    <!-- NAVBAR START -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 shadow-none" id="navbarBlur" data-scroll="false">
        <div class="container-fluid py-2 py-sm-1 px-3">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb d-none d-sm-flex bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6">
                    <li class="breadcrumb-item text-sm text-white"><a class="opacity-5 text-white">Pages</a></li>
                    <li class="breadcrumb-item text-sm text-white"><a class="text-white">Users</a></li>
                    <li class="breadcrumb-item text-sm text-white"><a class="text-white">Edit</a></li>
                    <li class="breadcrumb-item text-sm text-white active" aria-current="page">@Model.Windows_account</li>
                </ol>
                <h6 class="font-weight-bolder text-white mb-0 pe-3 pe-sm-0">Users</h6>
            </nav>
            <div class="collapse navbar-collapse me-md-0" id="navbar">
                <div class="ms-auto d-flex align-items-center">
                    <span class="d-inline text-white">Hello, @User.Identity.Name</span>
                </div>
                <div class="nav-item d-xl-none ps-3 d-flex align-items-center">
                    <a href="javascript:;" class="nav-link text-white p-0" id="iconNavbarSidenav">
                        <div class="sidenav-toggler-inner">
                            <i class="sidenav-toggler-line bg-white"></i>
                            <i class="sidenav-toggler-line bg-white"></i>
                            <i class="sidenav-toggler-line bg-white"></i>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </nav>
    <!-- NAVBAR END -->
    <!-- CONTENT START -->
    <div class="container-fluid py-5">
        <!-- EDIT FORM START -->
        <div class="row pt-4 pt-sm-0">
            <div class="col-md-9 mx-auto">
                <div class="card mb-4 border-radius-lg">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-start">
                        <h5 class="justify-content-start">Edit User</h5>
                        <a href="@Url.Action("Index")" class="btn btn-secondary">Close</a>
                    </div>
                    <div class="card-body px-4 pt-4 pb-4">
                        @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data", id = "editUserForm" }))
                        {
                            @Html.AntiForgeryToken()

                            @Html.HiddenFor(model => model.User_id)

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Username</label></span>
                                <span class="text-danger text-sm">● required</span>
                                @Html.TextBoxFor(model => model.User_name, new { @class = "form-control w-80 px-3", required = "required", placeholder = "Example: Full Name (Department)" })
                                @Html.ValidationMessageFor(model => model.User_name, "", new { @class = "text-danger d-block" })
                                <span id="user-name-error" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-4">
                                <span class="text-normal"><label>Windows Account</label></span>
                                <span class="text-danger text-sm">● required</span>
                                <div class="input-group w-80">
                                    <span class="input-group-text bg-gray-300 border-end-0">INFINEON\</span>
                                    <input type="text" id="windowsAccount" class="form-control border-start-0 px-3" required placeholder="Example: RamadhansyaM" />
                                </div>
                                <small class="form-text text-muted ms-1 d-block">
                                    Note: The domain prefix <strong>INFINEON\</strong> is automatically included.
                                </small>
                                <small class="form-text text-muted ms-1 d-block">
                                    (Click
                                    <a href="https://idms-web.infineon.com/ADGroupEditor/ADGroups/SearchGroups" class="btn btn-link custom-btn-link-ocean shadow-none p-0 m-0" target="_blank" rel="noopener noreferrer">
                                        here <i class="fa-solid fa-up-right-from-square"></i>
                                    </a>
                                    to find your Windows Accounts.)
                                </small>
                                <span id="windows-account-error" class="text-danger"></span>
                                @Html.HiddenFor(model => model.Windows_account)
                                @Html.ValidationMessageFor(model => model.Windows_account, "", new { @class = "text-danger d-block" })
                            </div>

                            <div class="row justify-content-start">
                                <div class="col-auto">
                                    <input type="submit" id="submitBtn" value="Save" class="btn btn-success btn-lg mt-3" />
                                </div>
                                <div class="col-auto">
                                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg mt-3">Cancel</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- EDIT FORM END -->
        <!-- FOOTER START -->
        <footer class="footer pt-3 mt-5">
            <div class="container-fluid">
                <div class="row align-items-center justify-content-lg-between">
                    <div class="col-lg-6 mb-lg-0 mb-4">
                        <div class="text-center text-md text-muted text-lg-start">
                            ©
                            <script>document.write(new Date().getFullYear())</script> -
                            <a class="font-weight-bold">OE Applications</a>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- FOOTER END -->
    </div>
    <!-- CONTENT END -->
</main>

<script>
    $(document).ready(function () {
        let isUserNameValid = true;
        let isWindowsAccountValid = true;
        let userNameTimer = null;
        let windowsAccountTimer = null;
        let currentUserNameRequest = null;
        let currentWindowsAccountRequest = null;

        var fullAccount = $("#Windows_account").val();

        if (fullAccount) {
            var username = fullAccount.replace("INFINEON\\", "");
            $("#windowsAccount").val(username);
        }

        function checkUnique(field, value, errorLabel, flagVar) {
            if (field === "User_name" && currentUserNameRequest) {
                currentUserNameRequest.abort();
            } else if (field === "Windows_account" && currentWindowsAccountRequest) {
                currentWindowsAccountRequest.abort();
            }

            var userId = @Model.User_id;

            const request = $.ajax({
                url: '@Url.Action("CheckUnique", "Users")',
                type: 'GET',
                data: { field: field, value: value, id: userId },
                success: function (response) {
                    if (!response.isValid) {
                        $(errorLabel).text(response.message);
                        if (flagVar === "isUserNameValid") {
                            isUserNameValid = false;
                        } else if (flagVar === "isWindowsAccountValid") {
                            isWindowsAccountValid = false;
                        }
                    } else {
                        $(errorLabel).text("");
                        if (flagVar === "isUserNameValid") {
                            isUserNameValid = true;
                        } else if (flagVar === "isWindowsAccountValid") {
                            isWindowsAccountValid = true;
                        }
                    }
                    toggleSubmitButton();
                }
            });

            if (field === "User_name") {
                currentUserNameRequest = request;
            } else if (field === "Windows_account") {
                currentWindowsAccountRequest = request;
            }
        }

        function toggleSubmitButton() {
            if (isUserNameValid && isWindowsAccountValid) {
                $("#submitBtn").prop("disabled", false);
            } else {
                $("#submitBtn").prop("disabled", true);
            }
        }

        $("#User_name").on("input", function () {
            clearTimeout(userNameTimer);
            userNameTimer = setTimeout(() => {
                checkUnique("User_name", $(this).val(), "#user-name-error", "isUserNameValid");
            }, 100);
        });

        $("#windowsAccount").on("input", function () {
            clearTimeout(windowsAccountTimer);
            var input = $(this);
            windowsAccountTimer = setTimeout(() => {
                var fullAccount = 'INFINEON\\' + input.val().trim();
                $("#Windows_account").val(fullAccount);
                checkUnique("Windows_account", fullAccount, "#windows-account-error", "isWindowsAccountValid");
            }, 100);
        });

        $("#editUserForm").on("submit", function (e) {
            if (!isUserNameValid || !isWindowsAccountValid) {
                e.preventDefault();
            }
            else {
                e.preventDefault();

                Swal.fire({
                    title: "Update Data?",
                    text: "Are you sure you want to update this user?",
                    icon: "question",
                    showCancelButton: true,
                    confirmButtonColor: '#2dce89',
                    cancelButtonColor: '#8392ab',
                    confirmButtonText: 'Yes, update it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        this.submit();
                    }
                });
            }
        });

        toggleSubmitButton();
    });

    document.querySelector('form').addEventListener('submit', function () {
        var username = document.getElementById('windowsAccount').value.trim();
        var fullAccount = 'INFINEON\\' + username;
        document.getElementById('Windows_account').value = fullAccount;
    });
</script>