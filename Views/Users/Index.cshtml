@model IEnumerable<ItemListApp.Models.Users>

@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main-content position-relative border-radius-lg max-height-vh-100 h-100">
    <!-- NAVBAR START -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 shadow-none" id="navbarBlur" data-scroll="false">
        <div class="container-fluid py-2 py-sm-1 px-3">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb d-none d-sm-flex bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6">
                    <li class="breadcrumb-item text-sm text-white"><a class="opacity-5 text-white">Pages</a></li>
                    <li class="breadcrumb-item text-sm text-white"><a class="text-white">Users</a></li>
                    <li class="breadcrumb-item text-sm text-white active" aria-current="page">Index</li>
                </ol>
                <h6 class="font-weight-bolder text-white mb-0 pe-3 pe-sm-0">Users</h6>
            </nav>
            <div class="collapse navbar-collapse me-md-0" id="navbar">
                <div class="ms-auto d-flex align-items-center">
                    <span class="d-inline text-white">Hello, @User.Identity.Name</span>
                </div>
                <div class="nav-item d-xl-none ps-3 d-flex align-items-center">
                    <a href="javascript:;" class="nav-link text-white p-0" id="iconNavbarSidenav">
                        <div class="sidenav-toggler-inner">
                            <i class="sidenav-toggler-line bg-white"></i>
                            <i class="sidenav-toggler-line bg-white"></i>
                            <i class="sidenav-toggler-line bg-white"></i>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </nav>
    <!-- NAVBAR END -->
    <!-- CONTENT START -->
    <div class="container-fluid py-5">
        <!-- TABLE START -->
        <div class="row pt-4 pt-sm-0">
            <div class="col-12">
                <div class="card mb-4 border-radius-lg">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-start gap-4">
                        <h5 class="justify-content-start">User List</h5>
                        @using (Html.BeginForm("Index", "Users", FormMethod.Get, new { @class = "mb-0" }))
                        {
                            <select name="status" onchange="this.form.submit()" class="form-select border-radius-sm">
                                <option value="All" @(ViewBag.CurrentStatus == "All" ? "selected" : "")>All</option>
                                <option value="Admin" @(ViewBag.CurrentStatus == "Admin" ? "selected" : "")>Admin</option>
                                <option value="User" @(ViewBag.CurrentStatus == "User" ? "selected" : "")>User</option>
                            </select>
                        }
                        <a href="@Url.Action("Create", "Users")" class="btn bg-berry-light bg-opacity-100 ms-auto text-white">Add New User</a>
                    </div>
                    <div class="card-body px-0 pt-0 pb-2">
                        <table id="myTable" class="table table-bordered display cell-border compact">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-md text-center align-content-center no-export">Edit Data</th>
                                    <th class="text-uppercase text-md text-center align-content-center no-export">Action</th>
                                    <th class="text-uppercase text-md text-center align-content-center">Username</th>
                                    <th class="text-uppercase text-md text-center align-content-center">Windows Account</th>
                                    <th class="text-uppercase text-md text-center align-content-center">Role</th>
                                    <th class="text-uppercase text-md text-center align-content-center">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td class="text-sm text-center align-content-center">
                                            <a href="@Url.Action("Edit", "Users", new { id = user.User_id })" class="btn bg-ocean-80 bg-opacity-100 text-white my-2">Edit</a>
                                        </td>
                                        <td class="text-sm text-center align-content-center">
                                            @using (Html.BeginForm(user.IsActive ? "Deactivate" : "Activate", "Users", new { id = user.User_id }, FormMethod.Post, new { @onsubmit = "return showConfirmation(this);" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn my-2 @(user.IsActive ? "btn-danger" : "btn-success")">
                                                    @(user.IsActive ? "Deactivate" : "Activate")
                                                </button>
                                            }
                                        </td>
                                        <td class="text-sm text-center align-content-center">@Html.DisplayFor(modelItem => user.User_name)</td>
                                        <td class="text-sm text-center align-content-center">@Html.DisplayFor(modelItem => user.Windows_account)</td>
                                        <td class="text-sm text-center align-content-center">
                                            @if (user.IsAdmin)
                                            {
                                                <span class="badge bg-ocean-80 bg-opacity-100">Admin</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-engineering-light bg-opacity-100">User</span>
                                            }
                                        </td>
                                        <td class="text-sm text-center align-content-center">
                                            @if (user.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Inactive</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!-- TABLE END -->
        <!-- FOOTER START -->
        <footer class="footer pt-3">
            <div class="container-fluid">
                <div class="row align-items-center justify-content-lg-between">
                    <div class="col-lg-6 mb-lg-0 mb-4">
                        <div class="copyright text-center text-md text-muted text-lg-start">
                            ©
                            <script>document.write(new Date().getFullYear())</script> -
                            <a class="font-weight-bold">OE Applications</a>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- FOOTER END -->
    </div>
    <!-- CONTENT END -->
</main>

<script>
    function showConfirmation(formElement) {
        e.preventDefault();

        const actionUrl = formElement.action.toLowerCase();

        const isDeactivation = actionUrl.includes("deactivate");
        const isActivation = actionUrl.includes("activate");

        let title = "Are you sure?";
        let text = "";
        let icon = "warning";

        if (isDeactivation) {
            title = "Deactivate this user?";
            text = "This user will no longer be active as an admin.";
            icon = "warning";
        } else if (isActivation) {
            title = "Activate this user?";
            text = "This user will become active again as an admin.";
            icon = "question";
        }

        Swal.fire({
            title: title,
            text: text,
            icon: icon,
            showCancelButton: true,
            confirmButtonColor: isDeactivation ? '#f5365c' : '#2dce89',
            cancelButtonColor: '#8392ab',
            confirmButtonText: isDeactivation ? 'Yes, deactivate' : 'Yes, activate',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                formElement.submit();
            }
        });

        return false;
    }

    $(document).ready(function () {
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    confirmButtonColor: '#2dce89',
                    timer: 5000,
                    timerProgressBar: true,
                    text: '@TempData["SuccessMessage"]'
                });
            </text>
        }
        else if (TempData["ErrorMessage"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Oops!',
                    confirmButtonColor: '#2dce89',
                    timer: 5000,
                    timerProgressBar: true,
                    text: '@TempData["ErrorMessage"]'
                });
            </text>
        }
    });
</script>